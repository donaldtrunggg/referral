name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  DB_CONNECTION: mysql
  MYSQL_HOST: 127.0.0.1
  MYSQL_PORT: 8888
  MYSQL_USERNAME: root
  MYSQL_DBNAME: db_test
  MYSQL_ENGINE: InnoDB
  MYSQL_CHARSET: utf8mb4
  MYSQL_COLLATE: utf8mb4_unicode_ci
  API_KEY: 630239CC130E1A7FD81A27B140976EAF437D05B5
  COOKIE_SECRET_PASSWORD: 9B7UJszYjQ29K2LVOSM6zpOnBV459B7UJszYjQ29K2LVOSM6zpOnBV45
  COOKIE_TTL: 1800000
  COOKIE_IS_SECURE: false
  COOKIE_IS_HTTP_ONLY: false
  ALGOLIA_APPLICATION_ID: ZIWS65EYMJ
  ALGOLIA_ADMIN_API_KEY: ed25d2393118daed7c8f296107330ac6
  ALGOLIA_SEARCH_ONLY_API_KEY: e52ea6a37d010ab44711ba3b747096e5
  ALGOLIA_MIXED_CONTENT_INDEX: mixed_content
  RECOVERY_TOKEN_LIFE_TIME: 86400000
  BASE_URL: https://sgcares.com
  CACHE_REDIS_NAME: redisCache
  CACHE_REDIS_HOST: 127.0.0.1
  CACHE_REDIS_POST: 6379
  CACHE_REDIS_PREFIX: sgcares-cache
  PROXY_COUNT: 0
  IP_WHITELIST_PROXY_COUNT: 0
  SESSION_CACHE_NAME: redisCache
  SESSION_TTL: 172800000
  FIREBASE_DYNAMIC_LINK_API_KEY: JdfenfAdflajsdEIAO12312-B2o7KOPAJhQvQ9OA
  ANDROID_PACKAGE_NAME: some.android.package
  IOS_BUNDLE_ID: some.ios.bundle
  DYNAMIC_LINK_REDIRECT_URL: https://itunes.apple.com
  QR_CODE_IMAGE_TYPE: png
  GIVING_SG_API_KEY: 1wz811wz81hd35hhd35h
  GIVING_SG_API_URL: https://dev-api.giving.sg/v1/
  GIVING_SG_API_TIMEOUT: 10000
  GIVING_SG_FEED_STORY_PER_PAGE: 4
  GIVING_SG_FEED_ITEM_PER_PAGE: 7
  GIVING_SG_FEED_EXTERNAL_DATA_PER_PAGE: 1

jobs:
  build:
    strategy:
      matrix:
        node-version: [8]

    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db_test
        ports:
          - 8888:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM
        run: npm install

      - name: Migrate Database
        run: |
          sudo service mysql start
#          sudo mysql -e "use mysql; update user set authentication_string=PASSWORD('') where User='root'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;"
          mysql -h 127.0.0.1 --port 8888 -u root -ppassword -e 'CREATE DATABASE IF NOT EXISTS $MYSQL_DBNAME;'
          npm run db:migrate:downall
          npm run db:migrate:up

      - name: Build
        run: npm run build --if-present

      - name: Execute test
        run: npm test


      - name: Generate deployment package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Upload file
        uses: actions/upload-artifact@v1
        with:
          name: files
          path: deploy.zip

  publish_staging:
    needs: [build]
    strategy:
      matrix:
        node-version: [8]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download file from step building
        uses: actions/download-artifact@v1
        with:
          name: files

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Deploy staging
        if: github.ref == 'refs/heads/develop'
        uses: einaregilsson/beanstalk-deploy@v4
        with:
          aws_access_key: ${{secrets.STAGING_AWS_ACCESS_KEY}}
          aws_secret_key: ${{secrets.STAGING_AWS_SECRET_KEY}}
          application_name: 'SG Care'
          environment_name: ${{secrets.STAGING_AWS_BUCKET_NAME}}
          region: 'ap-southeast-1'
          version_label: 'devt_${{ steps.format-time.outputs.replaced }}'
          deployment_package: files/deploy.zip

      - name: Deployed staging successfully!
        run: echo App deployed to ELB staging

  publish_production:
    needs: [build]
    strategy:
      matrix:
        node-version: [8]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download math result for job 2
        uses: actions/download-artifact@v1
        with:
          name: files

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Deploy production
        if: github.ref == 'refs/heads/master'
        uses: einaregilsson/beanstalk-deploy@v4
        with:
          aws_access_key: ${{secrets.PROD_AWS_ACCESS_KEY}}
          aws_secret_key: ${{secrets.PROD_AWS_SECRET_KEY}}
          application_name: 'SG Care'
          environment_name: ${{secrets.PROD_AWS_BUCKET_NAME}}
          region: 'ap-southeast-1'
          version_label: 'prod_${{ steps.format-time.outputs.replaced }}'
          deployment_package: files/deploy.zip

      - name: Deployed production successfully!
        run: echo App deployed to ELB production
